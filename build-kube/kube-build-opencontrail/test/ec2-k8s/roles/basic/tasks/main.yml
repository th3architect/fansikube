---
- name: Locate the VPC
  ec2_vpc_facts:
    region: "{{ aws_region }}"
    resource_tags:
      "Name": opencontrail-ci-vpc

- set_fact:
   ec2_public_subnet: "{{ ec2_vpc.subnets | selectattr('tags', 'equalto', dict(Name='opencontrail-ci-public')) | first}}"
   k8s_public_subnet: "{% if job_id is defined %}172.16.{{ 8 * (job_id|int % 32) }}.0/24{% else %}172.18.0.0/20{% endif %}"
   k8s_service_addresses: "{% if job_id is defined %}10.{{ 192 + (job_id|int % 32) }}.0.0/16{% else %}10.64.0.0/16{% endif %}"

- name: Deployer security-group
  ec2_group:
    name: k8s-basic-deployer
    description: "k8s deployer security-group"
    region: "{{ aws_region }}"
    vpc_id: "{{ ec2_vpc.id }}"
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
  register: sg_management

- name: Cluster security-group
  ec2_group:
    name: k8s-basic-sg
    description: "k8s cluster security-group"
    vpc_id: "{{ ec2_vpc.id }}"
    region: "{{ aws_region }}"
    rules:
      - proto: all
        group_name: k8s-basic-sg
      - proto: all
        group_id: "{{ sg_management.group_id }}"
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
  register: sg_cluster

- name: Management host
  ec2:
    image: "{{ ec2_image }}"
    key_name: k8s
    instance_tags:
      Name: "k8s-mgmt-{{ job_id | default('00') }}"
      Cluster: "k8s-ansible-{{ job_id | default('00') }}"
    instance_type: m3.medium
    region: "{{ aws_region }}"
    vpc_subnet_id: "{{ ec2_public_subnet.id }}"
    group_id: "{{ sg_management.group_id }}"
    assign_public_ip: yes
    count_tag:
      Name: "k8s-mgmt-{{ job_id | default('00') }}"
    exact_count: 1
    wait: true
  register: k8s_management

- add_host: name='{{ k8s_management.tagged_instances[0].public_dns_name }}' groups=deployer ansible_ssh_user="{{ ssh_user }}"

- name: Create gateway instance
  ec2:
    image: "{{ ec2_image }}"
    key_name: k8s
    instance_tags:
      Name: "k8s-gateway-{{ job_id | default('00') }}"
      Cluster: "k8s-ansible-{{ job_id | default('00') }}"
    instance_type: m3.medium
    region: "{{ aws_region }}"
    vpc_subnet_id: "{{ ec2_public_subnet.id }}"
    group_id: "{{ sg_cluster.group_id }}"
    assign_public_ip: yes
    source_dest_check: no
    wait: yes
    count_tag:
      Name: "k8s-gateway-{{ job_id | default('00') }}"
    exact_count: 1
  register: k8s_gateway

- name: Create master instance
  ec2:
    image: "{{ ec2_image }}"
    key_name: k8s
    instance_tags:
      Name: "k8s-master-{{ job_id | default('00') }}"
      Cluster: "k8s-ansible-{{ job_id | default('00') }}"
    instance_type: m3.large
    region: "{{ aws_region }}"
    vpc_subnet_id: "{{ ec2_public_subnet.id }}"
    group_id: "{{ sg_cluster.group_id }}"
    assign_public_ip: yes        
    count_tag:
      Name: "k8s-master-{{ job_id | default('00') }}"
    exact_count: 1
  register: k8s_master

- name: Create nodes
  ec2:
    image: "{{ ec2_image }}"
    key_name: k8s
    instance_tags:
      Name: "k8s-node-{{ job_id | default('00') }}"
      Cluster: "k8s-ansible-{{ job_id | default('00') }}"
    instance_type: m3.medium
    region: "{{ aws_region }}"
    vpc_subnet_id: "{{ ec2_public_subnet.id }}"
    group_id: "{{ sg_cluster.group_id }}"
    assign_public_ip: yes
    count_tag:
      Name: "k8s-node-{{ job_id | default('00') }}"
    exact_count: 2
  register: k8s_nodes

- name: Update the vpc routing table
  ec2_vpc_rtb_update:
    region: "{{ aws_region }}"
    vpc_id: "{{ ec2_vpc.id }}"
    subnets:
      - "{{ ec2_public_subnet.id }}"
    routes:
      - dest: 0.0.0.0/0
        gw: igw
      - dest: "{{ k8s_public_subnet }}"
        gw: "{{ k8s_gateway.tagged_instances[0].id }}"
      - dest: "{{ k8s_service_addresses }}"
        gw: "{{ k8s_gateway.tagged_instances[0].id }}"

- name: Store the status of the cluster
  template: src=status.j2 dest="{{ inventory_dir }}/cluster.status"

- name: Create inventory file
  template: src=inventory.j2 dest="{{ inventory_dir }}/inventory.cluster"

- wait_for: host="{{ k8s_management.tagged_instances[0].public_dns_name }}" port=22

